Node: record =>
    value => null
    right => null
    left => null
endrc

expr => !{Node
    "+"
    !{Node 4 null null}
    !{Node
        "*"
        !{Node 8 null null}
        !{Node 10 null null}
    }
}

expr_err => !{Node
    "/"
    !{Node
        "-"
        !{Node 4 null null}
        !{Node 4 null null}
    }
    !{Node
        "*"
        !{Node 78 null null}
        !{Node -6 null null}
    }
}

node_identity: func(node) =>
    <- node
endfn

eval: func(node) =>
    if not node:
        <- node
    endif
    if !(toNum node'value):
        <- node'value
    endif
    if !(node_identity node)'value == "+":
        <- !(eval node'left) + !(eval node'right)
    endif
    if node'value == "-":
        <- !(eval node'left) - !(eval node'right)
    endif
    if node'value == "*":
        <- !(eval node'left) * !(eval node'right)
    endif
    if node'value == "/":
        right => !(eval node'right)
        if right == 0:
            !(printLine "¡División por 0!")
            <- null
        endif
        <- !(eval node'left) * right
    endif
endfn

!(io::printLine !(eval expr))
!(io::printLine !(eval expr_err))
